// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum PostStatus {
  DRAFT
  PUBLISHED
}

enum ActiveStatus {
  ACTIVE
  INACTIVE
  DELETED
}

enum CommentStatus {
  DRAFT
  PUBLISHED
  DELETED
}

model Autobot {
  id                 String          @id @default(uuid())
  name           String          @unique
  posts              Post[]
  comments           Comment[]
  createdAt          DateTime        @default(now())
  updatedAt          DateTime        @updatedAt()
}
model Post {
  id          String       @id @default(uuid())
  title       String       @unique
  body        String       @db.Text
  status      PostStatus   @default(PUBLISHED)
  comments    Comment[]
  readCount   BigInt
  readingTime String
  author      Autobot      @relation(fields: [authorId], references: [id])
  authorId    String       @unique
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt()
}

model Comment {
  id         String        @id @default(uuid())
  email      String
  name       String
  comment    String
  status     CommentStatus @default(PUBLISHED)
  parent     Comment       @relation("commentToComment", fields: [parentId], references: [id])
  parentId   String        @unique
  children   Comment[]     @relation("commentToComment")
  author     Autobot       @relation(fields: [authorId], references: [id])
  authorId   String        @unique
  post       Post          @relation(fields: [postId], references: [id])
  postId     String        @unique
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt()
}
